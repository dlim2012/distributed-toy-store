# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import order_pb2 as order__pb2


class OrderStub(object):
    """the ToyStore service will have two rpc calls which are "Query" and "Buy"
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Buy = channel.unary_unary(
                '/unary.Order/Buy',
                request_serializer=order__pb2.order_details.SerializeToString,
                response_deserializer=order__pb2.order_query.FromString,
                )
        self.Check = channel.unary_unary(
                '/unary.Order/Check',
                request_serializer=order__pb2.order_query.SerializeToString,
                response_deserializer=order__pb2.order_details.FromString,
                )
        self.Ping = channel.unary_unary(
                '/unary.Order/Ping',
                request_serializer=order__pb2.ping.SerializeToString,
                response_deserializer=order__pb2.ping.FromString,
                )
        self.Propagate = channel.unary_unary(
                '/unary.Order/Propagate',
                request_serializer=order__pb2.order_information.SerializeToString,
                response_deserializer=order__pb2.ping.FromString,
                )


class OrderServicer(object):
    """the ToyStore service will have two rpc calls which are "Query" and "Buy"
    """

    def Buy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Propagate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Buy': grpc.unary_unary_rpc_method_handler(
                    servicer.Buy,
                    request_deserializer=order__pb2.order_details.FromString,
                    response_serializer=order__pb2.order_query.SerializeToString,
            ),
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=order__pb2.order_query.FromString,
                    response_serializer=order__pb2.order_details.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=order__pb2.ping.FromString,
                    response_serializer=order__pb2.ping.SerializeToString,
            ),
            'Propagate': grpc.unary_unary_rpc_method_handler(
                    servicer.Propagate,
                    request_deserializer=order__pb2.order_information.FromString,
                    response_serializer=order__pb2.ping.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unary.Order', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Order(object):
    """the ToyStore service will have two rpc calls which are "Query" and "Buy"
    """

    @staticmethod
    def Buy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Order/Buy',
            order__pb2.order_details.SerializeToString,
            order__pb2.order_query.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Order/Check',
            order__pb2.order_query.SerializeToString,
            order__pb2.order_details.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Order/Ping',
            order__pb2.ping.SerializeToString,
            order__pb2.ping.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Propagate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Order/Propagate',
            order__pb2.order_information.SerializeToString,
            order__pb2.ping.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
